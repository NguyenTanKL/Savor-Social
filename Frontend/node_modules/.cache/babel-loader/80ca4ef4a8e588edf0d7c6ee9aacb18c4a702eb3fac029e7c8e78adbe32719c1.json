{"ast":null,"code":"export const getRecommendations = async (user, followedUsers) => {\n  const {\n    address,\n    preferences\n  } = user;\n  const allRestaurants = await fetch('http://localhost:5000/api/user/restaurants').then(res => res.json());\n  console.log(\"recommend res:\", allRestaurants);\n  const allNormalUsers = await fetch('http://localhost:5000/api/user/normal-users').then(res => res.json());\n  console.log(\"recommend normal:\", allNormalUsers);\n\n  // **Lọc bỏ những người dùng và nhà hàng đã follow**\n  const unfollowedRestaurants = allRestaurants.filter(restaurant => !followedUsers.includes(restaurant._id));\n  const unfollowedNormalUsers = allNormalUsers.filter(normalUser => !followedUsers.includes(normalUser._id));\n\n  // **Lọc theo sở thích**\n  let filteredNormalUsers = unfollowedNormalUsers.filter(normalUser => preferences.some(pref => normalUser.preferences.includes(pref)));\n  let filteredRestaurants = unfollowedRestaurants.filter(restaurant => preferences.some(pref => restaurant.foodTypes.includes(pref)));\n\n  // Nếu không có sở thích chung, chọn ngẫu nhiên\n  filteredRestaurants = filteredRestaurants.length === 0 ? unfollowedRestaurants.sort(() => Math.random() - 0.5).slice(0, 5) : filteredRestaurants.sort((a, b) => b.rating - a.rating).slice(0, 5);\n  filteredNormalUsers = filteredNormalUsers.length === 0 ? unfollowedNormalUsers.sort(() => Math.random() - 0.5).slice(0, 5) : filteredNormalUsers.sort((a, b) => b.points - a.points).slice(0, 5);\n  return {\n    restaurants: filteredRestaurants,\n    normalUsers: filteredNormalUsers\n  };\n};","map":{"version":3,"names":["getRecommendations","user","followedUsers","address","preferences","allRestaurants","fetch","then","res","json","console","log","allNormalUsers","unfollowedRestaurants","filter","restaurant","includes","_id","unfollowedNormalUsers","normalUser","filteredNormalUsers","some","pref","filteredRestaurants","foodTypes","length","sort","Math","random","slice","a","b","rating","points","restaurants","normalUsers"],"sources":["F:/DACN/do-an/Frontend/src/utils/recommendations.js"],"sourcesContent":["export const getRecommendations = async (user, followedUsers) => {\r\n  const { address, preferences } = user;\r\n\r\n  const allRestaurants = await fetch('http://localhost:5000/api/user/restaurants')\r\n      .then(res => res.json());\r\n  console.log(\"recommend res:\", allRestaurants);\r\n\r\n  const allNormalUsers = await fetch('http://localhost:5000/api/user/normal-users')\r\n      .then(res => res.json());\r\n  console.log(\"recommend normal:\", allNormalUsers);\r\n\r\n  // **Lọc bỏ những người dùng và nhà hàng đã follow**\r\n  const unfollowedRestaurants = allRestaurants.filter(restaurant => !followedUsers.includes(restaurant._id));\r\n  const unfollowedNormalUsers = allNormalUsers.filter(normalUser => !followedUsers.includes(normalUser._id));\r\n\r\n  // **Lọc theo sở thích**\r\n  let filteredNormalUsers = unfollowedNormalUsers.filter(normalUser =>\r\n      preferences.some(pref => normalUser.preferences.includes(pref))\r\n  );\r\n  let filteredRestaurants = unfollowedRestaurants.filter(restaurant =>\r\n      preferences.some(pref => restaurant.foodTypes.includes(pref))\r\n  );\r\n\r\n  // Nếu không có sở thích chung, chọn ngẫu nhiên\r\n  filteredRestaurants = filteredRestaurants.length === 0\r\n      ? unfollowedRestaurants.sort(() => Math.random() - 0.5).slice(0, 5)\r\n      : filteredRestaurants.sort((a, b) => b.rating - a.rating).slice(0, 5);\r\n\r\n  filteredNormalUsers = filteredNormalUsers.length === 0\r\n      ? unfollowedNormalUsers.sort(() => Math.random() - 0.5).slice(0, 5)\r\n      : filteredNormalUsers.sort((a, b) => b.points - a.points).slice(0, 5);\r\n\r\n  return { restaurants: filteredRestaurants, normalUsers: filteredNormalUsers };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,aAAa,KAAK;EAC/D,MAAM;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGH,IAAI;EAErC,MAAMI,cAAc,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC,CAC3EC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,cAAc,CAAC;EAE7C,MAAMO,cAAc,GAAG,MAAMN,KAAK,CAAC,6CAA6C,CAAC,CAC5EC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,cAAc,CAAC;;EAEhD;EACA,MAAMC,qBAAqB,GAAGR,cAAc,CAACS,MAAM,CAACC,UAAU,IAAI,CAACb,aAAa,CAACc,QAAQ,CAACD,UAAU,CAACE,GAAG,CAAC,CAAC;EAC1G,MAAMC,qBAAqB,GAAGN,cAAc,CAACE,MAAM,CAACK,UAAU,IAAI,CAACjB,aAAa,CAACc,QAAQ,CAACG,UAAU,CAACF,GAAG,CAAC,CAAC;;EAE1G;EACA,IAAIG,mBAAmB,GAAGF,qBAAqB,CAACJ,MAAM,CAACK,UAAU,IAC7Df,WAAW,CAACiB,IAAI,CAACC,IAAI,IAAIH,UAAU,CAACf,WAAW,CAACY,QAAQ,CAACM,IAAI,CAAC,CAClE,CAAC;EACD,IAAIC,mBAAmB,GAAGV,qBAAqB,CAACC,MAAM,CAACC,UAAU,IAC7DX,WAAW,CAACiB,IAAI,CAACC,IAAI,IAAIP,UAAU,CAACS,SAAS,CAACR,QAAQ,CAACM,IAAI,CAAC,CAChE,CAAC;;EAED;EACAC,mBAAmB,GAAGA,mBAAmB,CAACE,MAAM,KAAK,CAAC,GAChDZ,qBAAqB,CAACa,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GACjEN,mBAAmB,CAACG,IAAI,CAAC,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,MAAM,GAAGF,CAAC,CAACE,MAAM,CAAC,CAACH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAEzET,mBAAmB,GAAGA,mBAAmB,CAACK,MAAM,KAAK,CAAC,GAChDP,qBAAqB,CAACQ,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GACjET,mBAAmB,CAACM,IAAI,CAAC,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACE,MAAM,GAAGH,CAAC,CAACG,MAAM,CAAC,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAEzE,OAAO;IAAEK,WAAW,EAAEX,mBAAmB;IAAEY,WAAW,EAAEf;EAAoB,CAAC;AAC/E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}