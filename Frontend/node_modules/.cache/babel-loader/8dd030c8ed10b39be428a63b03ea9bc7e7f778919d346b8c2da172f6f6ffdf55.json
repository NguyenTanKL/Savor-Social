{"ast":null,"code":"var _jsxFileName = \"F:\\\\DACN\\\\do-an\\\\Frontend\\\\src\\\\timeline\\\\Sugesstions.js\",\n  _s = $RefreshSig$();\n// Sugesstions.js\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport \"./Sugesstions.css\";\nimport AccountUser from \"../components/AccountUser\";\nimport { Avatar, CircularProgress } from \"@mui/material\";\nimport { getRecommendations } from \"../utils/recommendations\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sugesstions() {\n  _s();\n  // Lấy user từ Redux; nếu user không có trường following, gán mảng rỗng\n  const user = useSelector(state => state.user.user) || {};\n  const memoizedUser = useMemo(() => {\n    return {\n      ...user,\n      following: user.following || []\n    };\n  }, [user._id]); // Chỉ thay đổi khi user._id thay đổi\n\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // State lưu danh sách đã follow dưới dạng Set chứa các ID dạng string\n  const [followedAccounts, setFollowedAccounts] = useState(new Set());\n\n  // Hàm lấy danh sách đã follow từ API\n  const fetchFollowedUsers = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/user/followed\", {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"API Followed Users Response:\", data);\n        // Đảm bảo data.following là mảng; chuyển mỗi phần tử về string\n        const followed = Array.isArray(data.following) ? data.following.map(u => u._id.toString()) : [];\n        setFollowedAccounts(new Set(followed));\n        return followed;\n      } else {\n        console.error(\"Không lấy được danh sách đã follow\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi lấy danh sách follow:\", error);\n      return [];\n    }\n  };\n\n  // Hàm lấy danh sách gợi ý từ API dựa vào hàm getRecommendations\n  const fetchSuggestions = async () => {\n    setLoading(true);\n    try {\n      // Lấy danh sách đã follow trước\n      const followedList = await fetchFollowedUsers();\n      // Cập nhật lại user với danh sách following mới (để truyền cho getRecommendations)\n      const updatedUser = {\n        ...memoizedUser,\n        following: followedList\n      };\n      // Gọi hàm getRecommendations (hàm này đã lọc bỏ những user đã follow)\n      const recommendations = await getRecommendations(updatedUser);\n      console.log(\"Recommendations:\", recommendations);\n\n      // Lấy danh sách gợi ý từ recommendations\n      const restaurantSuggestions = Array.isArray(recommendations.restaurants) ? recommendations.restaurants : [];\n      const normalUserSuggestions = Array.isArray(recommendations.normalUsers) ? recommendations.normalUsers : [];\n\n      // Kết hợp danh sách, đảm bảo loại bỏ những tài khoản đã follow\n      const combined = [...restaurantSuggestions, ...normalUserSuggestions].filter(sugg => !followedAccounts.has(sugg._id.toString()));\n      // Giới hạn 5 gợi ý\n      setSuggestions(combined.slice(0, 5));\n    } catch (error) {\n      console.error(\"Lỗi khi lấy gợi ý:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Chỉ gọi fetchSuggestions khi user thay đổi (với memoizedUser)\n  useEffect(() => {\n    if (memoizedUser && memoizedUser._id) {\n      fetchSuggestions();\n    }\n    // Không đưa followedAccounts vào dependency để tránh vòng lặp re-render\n  }, [memoizedUser]);\n\n  // Hàm xử lý follow: gọi API và cập nhật trạng thái local\n  const handleFollow = async accountId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/user/follow/${accountId}`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        console.log(`Đã follow user: ${accountId}`);\n        // Cập nhật UI: thêm accountId vào followedAccounts\n        setFollowedAccounts(prev => new Set([...prev, accountId.toString()]));\n      } else {\n        console.error(\"Follow thất bại:\", await response.json());\n      }\n    } catch (error) {\n      console.error(\"Follow thất bại:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sugesstions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account__username\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"avatar__profile\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            style: {\n              width: \"50px\",\n              height: \"50px\"\n            },\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username__profile\",\n            children: user.username || \"_username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"profilename\",\n            children: user.name || \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switch__button\",\n        children: \"Switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sugesstions__title\",\n      children: \"Suggestions for you\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sugesstions__usernames\",\n      children: suggestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No suggestions available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this) : suggestions.map(sugg => /*#__PURE__*/_jsxDEV(AccountUser, {\n        username: sugg.username,\n        nickname: sugg.nickname || \"User\",\n        isFollowed: followedAccounts.has(sugg._id.toString()),\n        onFollow: () => handleFollow(sugg._id)\n      }, sugg._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(Sugesstions, \"UHrcrhdSu5QrIdvddeDiBQqjcYA=\", false, function () {\n  return [useSelector];\n});\n_c = Sugesstions;\nexport default Sugesstions;\nvar _c;\n$RefreshReg$(_c, \"Sugesstions\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","AccountUser","Avatar","CircularProgress","getRecommendations","useSelector","jsxDEV","_jsxDEV","Sugesstions","_s","user","state","memoizedUser","following","_id","suggestions","setSuggestions","loading","setLoading","followedAccounts","setFollowedAccounts","Set","fetchFollowedUsers","response","fetch","headers","localStorage","getItem","ok","data","json","console","log","followed","Array","isArray","map","u","toString","error","fetchSuggestions","followedList","updatedUser","recommendations","restaurantSuggestions","restaurants","normalUserSuggestions","normalUsers","combined","filter","sugg","has","slice","handleFollow","accountId","method","prev","className","children","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","username","name","length","nickname","isFollowed","onFollow","_c","$RefreshReg$"],"sources":["F:/DACN/do-an/Frontend/src/timeline/Sugesstions.js"],"sourcesContent":["// Sugesstions.js\r\nimport React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./Sugesstions.css\";\r\nimport AccountUser from \"../components/AccountUser\";\r\nimport { Avatar, CircularProgress } from \"@mui/material\";\r\nimport { getRecommendations } from \"../utils/recommendations\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Sugesstions() {\r\n  // Lấy user từ Redux; nếu user không có trường following, gán mảng rỗng\r\n  const user = useSelector((state) => state.user.user) || {};\r\n  const memoizedUser = useMemo(() => {\r\n    return { ...user, following: user.following || [] };\r\n  }, [user._id]); // Chỉ thay đổi khi user._id thay đổi\r\n\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // State lưu danh sách đã follow dưới dạng Set chứa các ID dạng string\r\n  const [followedAccounts, setFollowedAccounts] = useState(new Set());\r\n\r\n  // Hàm lấy danh sách đã follow từ API\r\n  const fetchFollowedUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/user/followed\", {\r\n        headers: { \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"API Followed Users Response:\", data);\r\n        // Đảm bảo data.following là mảng; chuyển mỗi phần tử về string\r\n        const followed = Array.isArray(data.following)\r\n          ? data.following.map((u) => u._id.toString())\r\n          : [];\r\n        setFollowedAccounts(new Set(followed));\r\n        return followed;\r\n      } else {\r\n        console.error(\"Không lấy được danh sách đã follow\");\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi lấy danh sách follow:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Hàm lấy danh sách gợi ý từ API dựa vào hàm getRecommendations\r\n  const fetchSuggestions = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Lấy danh sách đã follow trước\r\n      const followedList = await fetchFollowedUsers();\r\n      // Cập nhật lại user với danh sách following mới (để truyền cho getRecommendations)\r\n      const updatedUser = { ...memoizedUser, following: followedList };\r\n      // Gọi hàm getRecommendations (hàm này đã lọc bỏ những user đã follow)\r\n      const recommendations = await getRecommendations(updatedUser);\r\n      console.log(\"Recommendations:\", recommendations);\r\n      \r\n      // Lấy danh sách gợi ý từ recommendations\r\n      const restaurantSuggestions = Array.isArray(recommendations.restaurants)\r\n        ? recommendations.restaurants\r\n        : [];\r\n      const normalUserSuggestions = Array.isArray(recommendations.normalUsers)\r\n        ? recommendations.normalUsers\r\n        : [];\r\n\r\n      // Kết hợp danh sách, đảm bảo loại bỏ những tài khoản đã follow\r\n      const combined = [...restaurantSuggestions, ...normalUserSuggestions].filter(\r\n        (sugg) => !followedAccounts.has(sugg._id.toString())\r\n      );\r\n      // Giới hạn 5 gợi ý\r\n      setSuggestions(combined.slice(0, 5));\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi lấy gợi ý:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Chỉ gọi fetchSuggestions khi user thay đổi (với memoizedUser)\r\n  useEffect(() => {\r\n    if (memoizedUser && memoizedUser._id) {\r\n      fetchSuggestions();\r\n    }\r\n    // Không đưa followedAccounts vào dependency để tránh vòng lặp re-render\r\n  }, [memoizedUser]);\r\n\r\n  // Hàm xử lý follow: gọi API và cập nhật trạng thái local\r\n  const handleFollow = async (accountId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/user/follow/${accountId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(`Đã follow user: ${accountId}`);\r\n        // Cập nhật UI: thêm accountId vào followedAccounts\r\n        setFollowedAccounts((prev) => new Set([...prev, accountId.toString()]));\r\n      } else {\r\n        console.error(\"Follow thất bại:\", await response.json());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Follow thất bại:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sugesstions\">\r\n      <div className=\"account__username\">\r\n        <div className=\"account__left\">\r\n          <span className=\"avatar__profile\">\r\n            <Avatar style={{ width: \"50px\", height: \"50px\" }}>R</Avatar>\r\n          </span>\r\n          <div className=\"username__info\">\r\n            <span className=\"username__profile\">{user.username || \"_username\"}</span>\r\n            <span className=\"profilename\">{user.name || \"User Name\"}</span>\r\n          </div>\r\n        </div>\r\n        <button className=\"switch__button\">Switch</button>\r\n      </div>\r\n\r\n      <div className=\"sugesstions__title\">Suggestions for you</div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-spinner\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div className=\"sugesstions__usernames\">\r\n          {suggestions.length === 0 ? (\r\n            <p>No suggestions available.</p>\r\n          ) : (\r\n            suggestions.map((sugg) => (\r\n              <AccountUser\r\n                key={sugg._id}\r\n                username={sugg.username}\r\n                nickname={sugg.nickname || \"User\"}\r\n                isFollowed={followedAccounts.has(sugg._id.toString())}\r\n                onFollow={() => handleFollow(sugg._id)}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sugesstions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}