{"ast":null,"code":"export const getRecommendations = async user => {\n  const {\n    address,\n    preferences\n  } = user;\n  const allRestaurants = await fetch('http://localhost:5000/api/user/restaurants').then(res => res.json());\n  console.log(\"recommend res:\", allRestaurants);\n  const allNormalUsers = await fetch('http://localhost:5000/api/user/normal-users').then(res => res.json());\n  console.log(\"recommend normal:\", allNormalUsers);\n  let filteredRestaurants = allRestaurants.filter(restaurant => preferences.some(pref => restaurant.foodTypes.includes(pref)));\n\n  // Lọc người dùng có sở thích chung\n  let filteredNormalUsers = allNormalUsers.filter(normalUser => preferences.some(pref => normalUser.preferences.includes(pref)));\n  console.log(\"filteredNormalUsers\", filteredRestaurants);\n  // Nếu không có sở thích chung, chọn ngẫu nhiên\n  if (filteredRestaurants.length === 0) {\n    filteredRestaurants = allRestaurants.sort(() => Math.random() - 0.5).slice(0, 5);\n  } else {\n    filteredRestaurants = filteredRestaurants.sort((a, b) => b.rating - a.rating).slice(0, 5);\n  }\n  if (filteredNormalUsers.length === 0) {\n    filteredNormalUsers = allNormalUsers.sort(() => Math.random() - 0.5).slice(0, 5);\n  } else {\n    filteredNormalUsers = filteredNormalUsers.sort((a, b) => b.points - a.points).slice(0, 5);\n  }\n  return {\n    restaurants: filteredRestaurants,\n    normalUsers: filteredNormalUsers\n  };\n};","map":{"version":3,"names":["getRecommendations","user","address","preferences","allRestaurants","fetch","then","res","json","console","log","allNormalUsers","filteredRestaurants","filter","restaurant","some","pref","foodTypes","includes","filteredNormalUsers","normalUser","length","sort","Math","random","slice","a","b","rating","points","restaurants","normalUsers"],"sources":["F:/DACN/do-an/Frontend/src/utils/recommendations.js"],"sourcesContent":["export const getRecommendations = async (user) => {\r\n  const { address, preferences } = user;\r\n  const allRestaurants = await fetch('http://localhost:5000/api/user/restaurants').then(res => res.json());\r\n  console.log(\"recommend res:\", allRestaurants)\r\n  const allNormalUsers = await fetch('http://localhost:5000/api/user/normal-users').then(res => res.json());\r\n  console.log(\"recommend normal:\", allNormalUsers)\r\n\r\n  let filteredRestaurants = allRestaurants.filter(restaurant =>\r\n    preferences.some(pref => restaurant.foodTypes.includes(pref))\r\n);\r\n  \r\n// Lọc người dùng có sở thích chung\r\nlet filteredNormalUsers = allNormalUsers.filter(normalUser =>\r\n    preferences.some(pref => normalUser.preferences.includes(pref))\r\n);\r\nconsole.log(\"filteredNormalUsers\",filteredRestaurants)\r\n// Nếu không có sở thích chung, chọn ngẫu nhiên\r\nif (filteredRestaurants.length === 0) {\r\n    filteredRestaurants = allRestaurants.sort(() => Math.random() - 0.5).slice(0, 5);\r\n} else {\r\n    filteredRestaurants = filteredRestaurants.sort((a, b) => b.rating - a.rating).slice(0, 5);\r\n}\r\n\r\nif (filteredNormalUsers.length === 0) {\r\n    filteredNormalUsers = allNormalUsers.sort(() => Math.random() - 0.5).slice(0, 5);\r\n} else {\r\n    filteredNormalUsers = filteredNormalUsers.sort((a, b) => b.points - a.points).slice(0, 5);\r\n}\r\n\r\nreturn { restaurants: filteredRestaurants, normalUsers: filteredNormalUsers };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAOC,IAAI,IAAK;EAChD,MAAM;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGF,IAAI;EACrC,MAAMG,cAAc,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACxGC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,cAAc,CAAC;EAC7C,MAAMO,cAAc,GAAG,MAAMN,KAAK,CAAC,6CAA6C,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACzGC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,cAAc,CAAC;EAEhD,IAAIC,mBAAmB,GAAGR,cAAc,CAACS,MAAM,CAACC,UAAU,IACxDX,WAAW,CAACY,IAAI,CAACC,IAAI,IAAIF,UAAU,CAACG,SAAS,CAACC,QAAQ,CAACF,IAAI,CAAC,CAChE,CAAC;;EAED;EACA,IAAIG,mBAAmB,GAAGR,cAAc,CAACE,MAAM,CAACO,UAAU,IACtDjB,WAAW,CAACY,IAAI,CAACC,IAAI,IAAII,UAAU,CAACjB,WAAW,CAACe,QAAQ,CAACF,IAAI,CAAC,CAClE,CAAC;EACDP,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACE,mBAAmB,CAAC;EACtD;EACA,IAAIA,mBAAmB,CAACS,MAAM,KAAK,CAAC,EAAE;IAClCT,mBAAmB,GAAGR,cAAc,CAACkB,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACpF,CAAC,MAAM;IACHb,mBAAmB,GAAGA,mBAAmB,CAACU,IAAI,CAAC,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,MAAM,GAAGF,CAAC,CAACE,MAAM,CAAC,CAACH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7F;EAEA,IAAIN,mBAAmB,CAACE,MAAM,KAAK,CAAC,EAAE;IAClCF,mBAAmB,GAAGR,cAAc,CAACW,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACpF,CAAC,MAAM;IACHN,mBAAmB,GAAGA,mBAAmB,CAACG,IAAI,CAAC,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACE,MAAM,GAAGH,CAAC,CAACG,MAAM,CAAC,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7F;EAEA,OAAO;IAAEK,WAAW,EAAElB,mBAAmB;IAAEmB,WAAW,EAAEZ;EAAoB,CAAC;AAC7E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}