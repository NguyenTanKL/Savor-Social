{"ast":null,"code":"// userSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst getInitialUser = () => {\n  const userFromStorage = localStorage.getItem(\"user\");\n  console.log(\"userFromStorage:\", userFromStorage); // Debug giá trị\n  if (userFromStorage && typeof userFromStorage === \"string\") {\n    try {\n      return JSON.parse(userFromStorage);\n    } catch (error) {\n      console.error(\"Lỗi khi parse user từ localStorage:\", error);\n      return null; // Trả về null nếu parse thất bại\n    }\n  }\n  return null; // Trả về null nếu không có dữ liệu hoặc dữ liệu không hợp lệ\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: getInitialUser(),\n    isAuthenticated: !!localStorage.getItem(\"token\") // Kiểm tra token để xác thực\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    logout: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n    },\n    updateUser: (state, action) => {\n      const storedUser = localStorage.getItem(\"user\");\n      let userUpdated = storedUser ? JSON.parse(storedUser) : {}; // Kiểm tra nếu null thì gán object rỗng\n\n      userUpdated = {\n        ...userUpdated,\n        ...action.payload\n      };\n      localStorage.setItem(\"user\", JSON.stringify(userUpdated));\n      state.user = userUpdated;\n    }\n  }\n});\nexport const {\n  login,\n  logout,\n  updateUser\n} = userSlice.actions;\nexport default userSlice.reducer;\n\n// Async action để login\nexport function userLogin(data) {\n  return dispatch => {\n    dispatch(login(data));\n  };\n}\n\n// Async action để logout\nexport function userLogout() {\n  return dispatch => {\n    dispatch(logout());\n  };\n}","map":{"version":3,"names":["createSlice","getInitialUser","userFromStorage","localStorage","getItem","console","log","JSON","parse","error","userSlice","name","initialState","user","isAuthenticated","reducers","login","state","action","payload","setItem","stringify","logout","removeItem","updateUser","storedUser","userUpdated","actions","reducer","userLogin","data","dispatch","userLogout"],"sources":["F:/DACN/do-an/Frontend/src/redux/Reducer/userSlice.js"],"sourcesContent":["// userSlice.js\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst getInitialUser = () => {\r\n    const userFromStorage = localStorage.getItem(\"user\");\r\n    console.log(\"userFromStorage:\", userFromStorage); // Debug giá trị\r\n    if (userFromStorage && typeof userFromStorage === \"string\") {\r\n      try {\r\n        return JSON.parse(userFromStorage);\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi parse user từ localStorage:\", error);\r\n        return null; // Trả về null nếu parse thất bại\r\n      }\r\n    }\r\n    return null; // Trả về null nếu không có dữ liệu hoặc dữ liệu không hợp lệ\r\n  };\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: getInitialUser(),\r\n    isAuthenticated: !!localStorage.getItem(\"token\"), // Kiểm tra token để xác thực\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem(\"user\");  \r\n      localStorage.removeItem(\"token\");\r\n      \r\n    },\r\n    updateUser: (state, action) => {\r\n      const storedUser = localStorage.getItem(\"user\");\r\n      let userUpdated = storedUser ? JSON.parse(storedUser) : {}; // Kiểm tra nếu null thì gán object rỗng\r\n  \r\n      userUpdated = { ...userUpdated, ...action.payload };\r\n      localStorage.setItem(\"user\", JSON.stringify(userUpdated)); \r\n      state.user = userUpdated; \r\n  },\r\n  },\r\n});\r\n\r\nexport const { login, logout, updateUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n\r\n// Async action để login\r\nexport function userLogin(data) {\r\n  return (dispatch) => {\r\n    dispatch(login(data));\r\n  };\r\n}\r\n\r\n// Async action để logout\r\nexport function userLogout() {\r\n  return (dispatch) => {\r\n    dispatch(logout());\r\n  };\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACpDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,eAAe,CAAC,CAAC,CAAC;EAClD,IAAIA,eAAe,IAAI,OAAOA,eAAe,KAAK,QAAQ,EAAE;IAC1D,IAAI;MACF,OAAOK,IAAI,CAACC,KAAK,CAACN,eAAe,CAAC;IACpC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,OAAO,IAAI,CAAC,CAAC;IACf;EACF;EACA,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAEH,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAEZ,cAAc,CAAC,CAAC;IACtBa,eAAe,EAAE,CAAC,CAACX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;EACpD,CAAC;EACDW,QAAQ,EAAE;IACRC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACH,eAAe,GAAG,IAAI;MAC5BX,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACH,MAAM,CAACC,OAAO,CAAC,CAAC;IAC9D,CAAC;IACDG,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACJ,IAAI,GAAG,IAAI;MACjBI,KAAK,CAACH,eAAe,GAAG,KAAK;MAC7BX,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;MAC/BpB,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;IAElC,CAAC;IACDC,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMO,UAAU,GAAGtB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAIsB,WAAW,GAAGD,UAAU,GAAGlB,IAAI,CAACC,KAAK,CAACiB,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAE5DC,WAAW,GAAG;QAAE,GAAGA,WAAW;QAAE,GAAGR,MAAM,CAACC;MAAQ,CAAC;MACnDhB,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACK,WAAW,CAAC,CAAC;MACzDT,KAAK,CAACJ,IAAI,GAAGa,WAAW;IAC5B;EACA;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,KAAK;EAAEM,MAAM;EAAEE;AAAW,CAAC,GAAGd,SAAS,CAACiB,OAAO;AAC9D,eAAejB,SAAS,CAACkB,OAAO;;AAEhC;AACA,OAAO,SAASC,SAASA,CAACC,IAAI,EAAE;EAC9B,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAACf,KAAK,CAACc,IAAI,CAAC,CAAC;EACvB,CAAC;AACH;;AAEA;AACA,OAAO,SAASE,UAAUA,CAAA,EAAG;EAC3B,OAAQD,QAAQ,IAAK;IACnBA,QAAQ,CAACT,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}