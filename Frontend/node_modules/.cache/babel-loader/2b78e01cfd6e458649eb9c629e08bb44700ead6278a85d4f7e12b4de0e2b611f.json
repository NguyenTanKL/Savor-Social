{"ast":null,"code":"export const getRecommendations = async user => {\n  const {\n    address,\n    preferences\n  } = user;\n  const allRestaurants = await fetch('http://localhost:5000/api/user/restaurants').then(res => res.json());\n  console.log(\"recommend res:\", allRestaurants);\n  const allNormalUsers = await fetch('http://localhost:5000/api/user/normal-users').then(res => res.json());\n  console.log(\"recommend normal:\", allNormalUsers);\n  let filteredRestaurants, filteredNormalUsers;\n  if (preferences.length > 0) {\n    filteredRestaurants = allRestaurants.filter(restaurant => preferences.some(pref => restaurant.foodTypes.includes(pref))).sort((a, b) => b.rating - a.rating).slice(0, 5);\n    filteredNormalUsers = allNormalUsers.filter(normalUser => preferences.some(pref => normalUser.preferences.includes(pref))).sort((a, b) => b.points - a.points).slice(0, 5);\n  } else {\n    // Nếu không có preferences, chọn ngẫu nhiên 5 nhà hàng và 5 người dùng\n    filteredRestaurants = allRestaurants.sort(() => Math.random() - 0.5).slice(0, 5);\n    console.log(\"filter:\", filteredNormalUsers);\n    filteredNormalUsers = allNormalUsers.sort(() => Math.random() - 0.5).slice(0, 5);\n  }\n  return {\n    restaurants: filteredRestaurants,\n    normalUsers: filteredNormalUsers\n  };\n};","map":{"version":3,"names":["getRecommendations","user","address","preferences","allRestaurants","fetch","then","res","json","console","log","allNormalUsers","filteredRestaurants","filteredNormalUsers","length","filter","restaurant","some","pref","foodTypes","includes","sort","a","b","rating","slice","normalUser","points","Math","random","restaurants","normalUsers"],"sources":["F:/DACN/do-an/Frontend/src/utils/recommendations.js"],"sourcesContent":["export const getRecommendations = async (user) => {\r\n  const { address, preferences } = user;\r\n  const allRestaurants = await fetch('http://localhost:5000/api/user/restaurants').then(res => res.json());\r\n  console.log(\"recommend res:\", allRestaurants)\r\n  const allNormalUsers = await fetch('http://localhost:5000/api/user/normal-users').then(res => res.json());\r\n  console.log(\"recommend normal:\", allNormalUsers)\r\n  let filteredRestaurants, filteredNormalUsers;\r\n\r\n  if (preferences.length > 0) {\r\n      filteredRestaurants = allRestaurants\r\n          .filter(restaurant => preferences.some(pref => restaurant.foodTypes.includes(pref)))\r\n          .sort((a, b) => b.rating - a.rating)\r\n          .slice(0, 5);\r\n\r\n      filteredNormalUsers = allNormalUsers\r\n          .filter(normalUser => preferences.some(pref => normalUser.preferences.includes(pref)))\r\n          .sort((a, b) => b.points - a.points)\r\n          .slice(0, 5);\r\n  } else {\r\n      // Nếu không có preferences, chọn ngẫu nhiên 5 nhà hàng và 5 người dùng\r\n      filteredRestaurants = allRestaurants\r\n          .sort(() => Math.random() - 0.5)\r\n          .slice(0, 5);\r\nconsole.log(\"filter:\", filteredNormalUsers)\r\n      filteredNormalUsers = allNormalUsers\r\n          .sort(() => Math.random() - 0.5)\r\n          .slice(0, 5);\r\n  }\r\n\r\n  return { restaurants: filteredRestaurants, normalUsers: filteredNormalUsers };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAOC,IAAI,IAAK;EAChD,MAAM;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGF,IAAI;EACrC,MAAMG,cAAc,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACxGC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,cAAc,CAAC;EAC7C,MAAMO,cAAc,GAAG,MAAMN,KAAK,CAAC,6CAA6C,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EACzGC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,cAAc,CAAC;EAChD,IAAIC,mBAAmB,EAAEC,mBAAmB;EAE5C,IAAIV,WAAW,CAACW,MAAM,GAAG,CAAC,EAAE;IACxBF,mBAAmB,GAAGR,cAAc,CAC/BW,MAAM,CAACC,UAAU,IAAIb,WAAW,CAACc,IAAI,CAACC,IAAI,IAAIF,UAAU,CAACG,SAAS,CAACC,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC,CACnFG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,MAAM,GAAGF,CAAC,CAACE,MAAM,CAAC,CACnCC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAEhBZ,mBAAmB,GAAGF,cAAc,CAC/BI,MAAM,CAACW,UAAU,IAAIvB,WAAW,CAACc,IAAI,CAACC,IAAI,IAAIQ,UAAU,CAACvB,WAAW,CAACiB,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC,CACrFG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACI,MAAM,GAAGL,CAAC,CAACK,MAAM,CAAC,CACnCF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,MAAM;IACH;IACAb,mBAAmB,GAAGR,cAAc,CAC/BiB,IAAI,CAAC,MAAMO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACtBhB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEG,mBAAmB,CAAC;IACrCA,mBAAmB,GAAGF,cAAc,CAC/BU,IAAI,CAAC,MAAMO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACpB;EAEA,OAAO;IAAEK,WAAW,EAAElB,mBAAmB;IAAEmB,WAAW,EAAElB;EAAoB,CAAC;AAC/E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}